-- Address decode logic for ipbus fabric
-- 
-- This file has been AUTOGENERATED from the address table - do not hand edit
-- 
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
-- 
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

package ipbus_decode_emp_datapath is

  constant IPBUS_SEL_WIDTH: positive := 3;
  subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
  function ipbus_sel_emp_datapath(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

-- START automatically  generated VHDL the Tue Aug 14 11:04:19 2018 
  constant N_SLV_CTRL: integer := 0;
  constant N_SLV_REGION_INFO: integer := 1;
  constant N_SLV_BC0_MON: integer := 2;
  constant N_SLV_REGION: integer := 3;
  constant N_SLAVES: integer := 4;
-- END automatically generated VHDL

    
end ipbus_decode_emp_datapath;

package body ipbus_decode_emp_datapath is

  function ipbus_sel_emp_datapath(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
    variable sel: ipbus_sel_t;
  begin

-- START automatically  generated VHDL the Tue Aug 14 11:04:19 2018 
    if    std_match(addr, "--------------------0---------00") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CTRL, IPBUS_SEL_WIDTH)); -- ctrl / base 0x00000000 / mask 0x00000803
    elsif std_match(addr, "--------------------0---------01") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_REGION_INFO, IPBUS_SEL_WIDTH)); -- region_info / base 0x00000001 / mask 0x00000803
    elsif std_match(addr, "--------------------0---------1-") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_BC0_MON, IPBUS_SEL_WIDTH)); -- bc0_mon / base 0x00000002 / mask 0x00000802
    elsif std_match(addr, "--------------------1-----------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_REGION, IPBUS_SEL_WIDTH)); -- region / base 0x00000800 / mask 0x00000800
-- END automatically generated VHDL

    else
        sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
    end if;

    return sel;

  end function ipbus_sel_emp_datapath;

end ipbus_decode_emp_datapath;

