-- Address decode logic for ipbus fabric
-- 
-- This file has been AUTOGENERATED from the address table - do not hand edit
-- 
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
-- 
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

package ipbus_decode_emp_region is

  constant IPBUS_SEL_WIDTH: positive := 3;
  subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
  function ipbus_sel_emp_region(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

-- START automatically  generated VHDL the Tue Mar 12 21:23:53 2019 
  constant N_SLV_BUFFER: integer := 0;
  constant N_SLV_FORMATTER_CSR: integer := 1;
  constant N_SLV_ALIGN: integer := 2;
  constant N_SLV_MGT: integer := 3;
  constant N_SLV_DRP: integer := 4;
  constant N_SLV_DRP_COM: integer := 5;
  constant N_SLAVES: integer := 6;
-- END automatically generated VHDL

    
end ipbus_decode_emp_region;

package body ipbus_decode_emp_region is

  function ipbus_sel_emp_region(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
    variable sel: ipbus_sel_t;
  begin

-- START automatically  generated VHDL the Tue Mar 12 21:23:53 2019 
    if    std_match(addr, "---------------------00--0-00---") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_BUFFER, IPBUS_SEL_WIDTH)); -- buffer / base 0x00000000 / mask 0x00000658
    elsif std_match(addr, "---------------------00--0-01---") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_FORMATTER_CSR, IPBUS_SEL_WIDTH)); -- formatter.csr / base 0x00000008 / mask 0x00000658
    elsif std_match(addr, "---------------------00--0-10---") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_ALIGN, IPBUS_SEL_WIDTH)); -- align / base 0x00000010 / mask 0x00000658
    elsif std_match(addr, "---------------------00--1-00---") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_MGT, IPBUS_SEL_WIDTH)); -- mgt / base 0x00000040 / mask 0x00000658
    elsif std_match(addr, "---------------------01---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_DRP, IPBUS_SEL_WIDTH)); -- drp / base 0x00000200 / mask 0x00000600
    elsif std_match(addr, "---------------------10---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_DRP_COM, IPBUS_SEL_WIDTH)); -- drp_com / base 0x00000400 / mask 0x00000600
-- END automatically generated VHDL

    else
        sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
    end if;

    return sel;

  end function ipbus_sel_emp_region;

end ipbus_decode_emp_region;

